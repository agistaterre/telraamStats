[{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Gathering data","text":"vignette describes traffic data Telraam sensors get access specific data. go , ’ll attach packages use.","code":"library(telraamStats)"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"telraam","dir":"Articles","previous_headings":"Introduction","what":"Telraam","title":"Gathering data","text":"Telraam Belgian company develops sensors monitoring collecting multi-modal traffic data. sensors equipped cameras count road users using various mode transport, including pedestrian, cyclists, cars heavy vehicles. diverse range stakeholders (individuals, community groups, local authoritieds, researchers…) can purchase install Telraam sensor buildings. map sensors available Telraam website. Everyone can access data web interface (example) API.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"available-data","dir":"Articles","previous_headings":"Introduction > Telraam","what":"Available data","title":"Gathering data","text":"Telraam API provides information road segments sensors locations, parameters, importantly, offers traffic data. Every hour, sensor sends information traffic counts, transportation mode road direction, along confidence metric. addition traffic counts, estimated car speed car speed histogram also available. details data provided vignette.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"included-dataset","dir":"Articles","previous_headings":"Introduction","what":"Included dataset","title":"Gathering data","text":"’re interested discovering Telraam data playing real traffic data, dataset two road segments city Châteaubourg (FR) included package. Châteaubourg municipality Brittany, northwestern France. population around 7,500 inhabitants area less 30km\\(^2\\). France, city largest number Telraam sensors 2023 far highest density sensors. two road segments offer hourly data January 1, 2022, December 31, 2022. data directly extracted API may contain missing extreme values.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"load-included-dataset","dir":"Articles","previous_headings":"Introduction > Included dataset","what":"Load included dataset","title":"Gathering data","text":"Included dataset lazily loaded telraamStats package. already called library(telraamStats), dataset already attached can call directly : Otherwise, don’t want load entire package, can also access dataset using telraamStats::traffic.","code":"head(traffic)"},{"path":[]},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"obtain-a-telraam-token","dir":"Articles","previous_headings":"Introduction > Retrieve data from a specific road segment or set of segments","what":"1. Obtain a Telraam token","title":"Gathering data","text":"work data one sensor - -, must first create Telraam (free) account obtain API token. API token serves unique identifier accessing Telraam API service, used package. can generate personal dashboard Telraam website. information Telraam API, refer Telraam Q&website.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"specify-your-token-in-configuration","dir":"Articles","previous_headings":"Introduction > Retrieve data from a specific road segment or set of segments","what":"2. Specify your token in configuration","title":"Gathering data","text":"strongly recommended directly embed token code, especially code shared versioned using system like Git. two options specify Telraam token : Edit .Renviron file. .Renviron useful defining sensitive information R environment variables: contains list environment variables set. easy way edit file add Telraam token using usethis package. Run following command (either every time change API Token) : .Renviron file open RStudio can add new line form token='YourTelraamAPIToken'. comfortable previous step, can use built-function telraamStats package. However, keep mind need run function every time want retrieve data: want verify token correctly set, can use following command :","code":"if (!require(\"usethis\")) install.packages(\"usethis\") #if you haven't installed 'usethis' already usethis::edit_r_environ() set_telraam_token(token = 'YourTelraamAPIToken') get_telraam_token()"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"specify-road-segment-ids-in-configuration-file","dir":"Articles","previous_headings":"Introduction > Retrieve data from a specific road segment or set of segments","what":"3. Specify road segment IDs in configuration file","title":"Gathering data","text":"road segment unique ID, can found Telraam location URL. instance, URL one Châteaubourg’s segments https://telraam.net/home/location/9000005665, ID located last part URL (9000005665). gathered IDs segments, can specify editing inst\\config.yml file. file can created using create_config() function. executed, find config.yml file inst\\ folder work directory. file already contains following template, can modify (directly yml file) add segments, adhering format template, , segment name (without quotes), followed colon, segment number within quotes : segmentName: '9000000000'. can specify many segments want personalize segment’s names.","code":"create_config() default:   url: https://telraam-api.net/v1   segments:     segment-01: '9000000000'     segment-02: '9000000000' default:   url: https://telraam-api.net/v1   segments:     MyFirstSegment: '9000000000'     My-second-segment: '9000000000'     My_3rd_segment: '9000000000'"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"get-data-for-your-road-segments","dir":"Articles","previous_headings":"Introduction > Retrieve data from a specific road segment or set of segments","what":"4. Get data for your road segments","title":"Gathering data","text":"specified names IDs road segments, can use retrieve_sensor() function gather data segment Telraam API. function takes, arguments, name segment, first last day period interest. must use names specified configuration files dates must date type. want store data, can directly use write_update_data(), performs task also writes updates sensor data data/ directory .Rdata format. arguments previous function: retrieve data already stored, can use import_sensor(). function imports data associated given list sensor names .RData files contained data/ directory. , also use names specified configuration files. available periods imported.","code":"retrieve_sensor(segment_name = \"segment-01\",                  start_date = as.Date('2023-09-01'),                  end_date = as.Date('2023-09-30')) write_update_data(segment_name = \"segment-01\",                   start_date = as.Date('2023-09-01'),                   end_date = as.Date('2023-09-30')) write_update_data(\"segment-02\", as.Date('2023-08-01'), as.Date('2023-09-30')) import_sensor(list_sensor = c(\"segment-01\",\"segment-02\"))"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data-details.html","id":"data-details","dir":"Articles","previous_headings":"Introduction","what":"Data details","title":"Gathering data","text":"importing data road segments (following previous steps) using included dataset, obtain Telraam data columns. Among columns, important ones : segment_id : Telraam ID road segment ; date : date UTC time reporting interval (beginning interval) ; interval : can “hourly” “daily” hourly daily aggregate data ; uptime : 0 1, represents portion reporting interval actively spent counting traffic. information uptime parameter, can refer Telraam article ; heavy, heavy_lft, heavy_rgt : number heavy vehicles, total directions. also columns transportation mode (car, bike, pedestrian) ; car_speed_hist_0to70plus, car_speed_hist_0to120plus : estimated car speed distribution 10 km/h bins 0 70+ km/h 120+ km/h (percentage) ; v85 : estimated car speed limit km/h 85% cars respect. Complete data description can found data documentation package, can refer Telraam API website details.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Visualize and analyse traffic","text":"vignette illustrates potential visualizations (ensuing analysis) traffic data Telraam sensors provided package. go , ’ll attach packages use. also load data: , use dataset attached package, can certainly replicate visualizations analyses using data sensors. information data retrieval, can refer dedicated vignette (vignette(\"data-details\")). Included dataset lazily loaded telraamStats package. already called library(telraamStats), dataset already attached can call directly :","code":"library(telraamStats) head(traffic)"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"period-availability-for-your-segments","dir":"Articles","previous_headings":"","what":"Period availability for your segments","title":"Visualize and analyse traffic","text":"Road segment-specific sensors operate continuously; limited daylight duration may also face external issues (unplugged, falling, software problems, etc.). data collected period may continuous interruptions ranging hour several days. visualize traffic, important aware operating periods sensors analyzed, well quality data. data reliability provided uptime indicator. Uptime, ranging 0 1, corresponds percentage time camera actively counting passages. Following Telraam’s recommendations, uptime lower 0.5 considered associated poor-quality data. graphical representation , obtained using gg_availability() function, provides overview data availability quality different sensors entire period. indicator calculated daytime hours (5 .m. 8 p.m.) Telraam sensor operational. represents average uptime hours. illustrates daily average uptime evolution: higher value, better data quality sensor respective day. purpose assist selecting study periods.  graph, example, can observe black time slots camera segment ‘ParisArcEnCiel-05’ report data end June 2022 end year 2022. can also notice average uptime higher summer period. illustrates fact duration daylight, therefore possible filming period, longer summer. graphs generated functions presented based data filtered according uptime parameter: hours uptime > 0.5 retained. filter editable moment ensures data considered sufficient level reliability.","code":"plot(   gg_availability(traffic) )"},{"path":[]},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"traffic-evolution","dir":"Articles","previous_headings":"Traffic","what":"Traffic evolution","title":"Visualize and analyse traffic","text":"identified specific period want analyze, may want observe evolution traffic trends time. gg_traffic_evolution() enables representation traffic particular period, aggregated segments, specific direction, aggregated , aggregated transportation modes selected ones. Without specifying options, can view traffic evolution cars heavy vehicles segments entire period. default, smoothing curve (based GAM model cubic spline) used represent trend.  can specify date range, one segments, different transportation modes directions choose whether want smoothing curve . default, aggregation done day, can obtain precise information setting agg_day parameter FALSE aggregate hour. example possible filters parameters :","code":"plot(   gg_traffic_evolution(traffic) ) plot(   gg_traffic_evolution(traffic,                        date_range = c('2022-01-01','2022-03-01'),                        segment = 'RteVitre-06',                        mode = c('car','pedestrian'),                        direction = 'lft',                        smoothed = FALSE,                        agg_day = FALSE) )"},{"path":[]},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"average-traffic-per-weekday","dir":"Articles","previous_headings":"Traffic > Average traffic","what":"Average traffic per weekday","title":"Visualize and analyse traffic","text":"traffic varies according days week, can serve analytical window understand territorial mobility. gg_traffic_avg() function allows examine average behavior per day week. can used globally specifically (specific period, segment set segments, specific direction, particular transportation mode). default, function provides average traffic per day week :  , instance, one can observe several different traffic dynamics, weekdays exhibiting similar patterns weekends displaying different ones (shifted morning peak smoother traffic throughout day). , ’s possible select specific period, specific segment, mode transportation, direction, day week according needs study.  representation, instance, allows us see traffic one direction segment much heavier evening morning, even Fridays compared Mondays.","code":"plot(   gg_traffic_avg(traffic) ) plot(   gg_traffic_avg(traffic,                  date_range = c('2022-07-01','2022-09-01'),                  segment = 'RteVitre-06',                  mode = 'car',                  direction = 'rgt',                  weekday = c('monday','friday')                  ) )"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"average-traffic-per-segment","dir":"Articles","previous_headings":"Traffic > Average traffic","what":"Average traffic per segment","title":"Visualize and analyse traffic","text":"function gg_traffic_avg() can used calculate average traffic per segment compare segments . , simply use parameter 'aggregated_by' replace default value ('weekday') 'segment_name', shown example . function plot average traffic according time day, time road segment.  representation allows us realize differences traffic, terms volumes dynamics. Similarly , possible specify period, direction travel, mode transportation, day week.","code":"plot(   gg_traffic_avg(traffic,                   aggregated_by = \"segment_name\") ) plot(   gg_traffic_avg(traffic,                   aggregated_by = 'segment_name',                  weekday = 'sunday',                  mode = 'car',                  direction = 'rgt') )"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"average-traffic-per-direction","dir":"Articles","previous_headings":"Traffic > Average traffic","what":"Average traffic per direction","title":"Visualize and analyse traffic","text":"function gg_traffic_avg() can also used compare directions travel, using parameter aggregated_by = \"direction\" shown example . can particularly useful within road segment observe commuter traffic. , still possible filter modes transportation, days week, segments.  example typical route significant commuter traffic, heavy traffic one direction morning direction evening.","code":"plot(   gg_traffic_avg(traffic,                   aggregated_by = 'direction',                  weekday = 'monday',                  mode = 'car',                  segments = 'RteVitre-06'                  ) )"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"average-traffic-per-mode","dir":"Articles","previous_headings":"Traffic > Average traffic","what":"Average traffic per mode","title":"Visualize and analyse traffic","text":"Finally, function gg_traffic_avg() allows comparing modes transportation , particularly observe differences volumes dynamics, using parameter aggregated_by = \"direction\" shown example . , ’s possible filter directions, days week, segments, hours, course, select modes transportation","code":"plot(   gg_traffic_avg(traffic,                   aggregated_by = 'mode',                  mode = c('heavy','car'),                  segment = 'RteVitre-06') )"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"car-speed","dir":"Articles","previous_headings":"","what":"Car speed","title":"Visualize and analyse traffic","text":"Telraam sensors offer speed estimation cars two levels : estimated car speed distribution (ranging 0 120+ km/h), 10 5 km/h bins ; v85, estimated car speed limit km/h 85% cars respect. 15% drivers drive faster v85 indicator. Telraam specifies speed-related measurements biases: accuracy likely better +/- 10%. Moreover, measurements pertain exclusively cars include modes transportation.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"car-speed-distribution","dir":"Articles","previous_headings":"Car speed","what":"Car speed distribution","title":"Visualize and analyse traffic","text":"car’s speed distribution can plotted globally filters (specific period, weekdays segments) function gg_car_speed_histogram(). Refer documentation information filters.  function gg_car_speed_histogram() enables compare speed histograms different segments weekdays. example distinction road segment.  example, can observe difference two segments: first segment (ParisArcEnCiel-05), speed distribution spread characterized peak low speeds. second segment (RteVitre-06) peak distribution 35-40 km/h class, values concentrated around range. period, 25% cars driving 35 40 km/h segment. example weekday available filters.  shift less significant distinguishing sensors, one can still notice difference speed weekdays, likely attributable traffic dynamics differences observed earlier.","code":"plot(   gg_car_speed_histogram(traffic) ) plot(   gg_car_speed_histogram(traffic,                           aggregated_by = 'segment_name') ) plot(   gg_car_speed_histogram(traffic,                           weekday = c('monday','sunday'),                          segments = 'RteVitre-06',                          hours = 17:20,                          aggregated_by = \"weekday\") )"},{"path":"https://ketsiaguichard.github.io/telraamStats/articles/data_visualization.html","id":"v85","dir":"Articles","previous_headings":"Car speed","what":"v85","title":"Visualize and analyse traffic","text":"v85 estimated car speed limit km/h 85% cars respect. 15% drivers drive faster v85. function gg_car_speed_v85() allows plotting evolution average indicator according time day. can particularly interesting link traffic, observe possible congestion phenomena  , possible view indicator segment (aggregated_by = 'segment_name') day week (aggregated_by = 'weekday'). ’s example segment.  Finally, still possible filter specific period particular segment.","code":"plot(   gg_car_speed_v85(traffic) ) plot(   gg_car_speed_v85(traffic,                    aggregated_by = 'segment_name') ) plot(   gg_car_speed_v85(traffic,                    aggregated_by = 'weekday',                    date_range = c('2022-01-01','2022-03-01'),                    segments = 'RteVitre-06') )"},{"path":"https://ketsiaguichard.github.io/telraamStats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lilou Augeray. Author. Ulysse Caromel. Author. Ketsia Guichard. Maintainer. Pascal Irz. Author. Mijin Park. Author. Tanguy Richard. Author. Agis-ta-terre. Copyright holder, funder.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Augeray L, Caromel U, Irz P, Park M, Richard T (2024). telraamStats: Retrieval Visualization Mobility Data 'Telraam' Sensors. R package version 1.1.0, https://annuaire.agistaterre.org/telraamStats/.","code":"@Manual{,   title = {telraamStats: Retrieval and Visualization of Mobility Data from 'Telraam' Sensors},   author = {Lilou Augeray and Ulysse Caromel and Pascal Irz and Mijin Park and Tanguy Richard},   year = {2024},   note = {R package version 1.1.0},   url = {https://annuaire.agistaterre.org/telraamStats/}, }"},{"path":"https://ketsiaguichard.github.io/telraamStats/index.html","id":"telraamstats","dir":"","previous_headings":"","what":"Retrieval and Visualization of Mobility Data from Telraam Sensors","title":"Retrieval and Visualization of Mobility Data from Telraam Sensors","text":"aim package grant user tools data visualisation data analysis mobility data Telraam sensors. example using package can seen application, although also utilizes advanced representations. Link Github repository package currently development version, feel free contact us information !","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/index.html","id":"telraam-sensors","dir":"","previous_headings":"","what":"Telraam Sensors","title":"Retrieval and Visualization of Mobility Data from Telraam Sensors","text":"Telraam Belgian company offers citizen-powered solution gathering diverse traffic data using affordable device. sensor continuously monitors street activity citizen’s window, capturing data various transportation modes like cars, heavy vehicles, cyclists, pedestrians. data crucial informing traffic planning engaging local communities dialogue authorities. sensors employs advanced AI proprietary algorithms detect, classify count road users, providing anonymous, aggregate data 15-minute resolution. device operates autonomously installed upper-floor window unobstructed view street. Data collected Telraam devices can shared Open Data. information view map currently available sensors, can visit Telraam website.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/index.html","id":"specific-terms","dir":"","previous_headings":"","what":"Specific Terms","title":"Retrieval and Visualization of Mobility Data from Telraam Sensors","text":"Telraam data includes specific terms essential use package : segment abbreviated term road segment. road segment part road, defined set geographical coordinate pairs Telraam id. segments defined typically two corners street, longer street likely consist multiple road segments ; sensor device measures traffic specific segment. Multiple sensors can associated road segment, unique sensor linked multiple segments. Sensors also defined configuration, primarily version (either V1 S2, S2 advanced version Telraam devices) ; uptime: Telraam V1 sensors don’t count trafic 100% time. portion time used calculations preprocessing. uptime percentage time counter actively counting. Data provided Telraam API already corrected uptime Telraam recommends keeping eye uptime values. high uptime, typically 0.7-0.8, indicates good data. first last daylight hour day consistently lower uptimes due aforementioned reasons, uptimes day 0.5, usually indicates potential issue instance. Uptime Telraam S2 units almost always 1.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"Retrieval and Visualization of Mobility Data from Telraam Sensors","text":"work licensed Creative Commons Attribution-ShareAlike 4.0 International License.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/index.html","id":"install-package","dir":"","previous_headings":"","what":"Install Package","title":"Retrieval and Visualization of Mobility Data from Telraam Sensors","text":"want install package Github, can use devtools package: Vignette (entire package) currently development version. wish review vignette, build_vignettes argument mandatory.","code":"if(!require(devtools)){     install.packages(\"devtools\") } devtools::install_github(\"https://github.com/KetsiaGuichard/telraamStats\",                               dependencies = TRUE,                                build_vignettes = TRUE)"},{"path":"https://ketsiaguichard.github.io/telraamStats/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Retrieval and Visualization of Mobility Data from Telraam Sensors","text":"package installed, can run following command view first vignette : directly read page : vignette(\"data-details\").","code":"vignette(\"data-details\")"},{"path":"https://ketsiaguichard.github.io/telraamStats/index.html","id":"future-developments","dir":"","previous_headings":"","what":"Future Developments","title":"Retrieval and Visualization of Mobility Data from Telraam Sensors","text":"Future developments focus data quality topics: descriptive statistics visualizations data quality, well imputation methods data low update frequencies (indicating low quality).","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/check_options_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if options are available in the options list, replace by a default otherwise. — check_options_graph","title":"Check if options are available in the options list, replace by a default otherwise. — check_options_graph","text":"Check options available options list, replace default otherwise.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/check_options_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if options are available in the options list, replace by a default otherwise. — check_options_graph","text":"","code":"check_options_graph(options_selected, options_available, default)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/check_options_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if options are available in the options list, replace by a default otherwise. — check_options_graph","text":"options_selected List characters. Selected options. options_available List characters. Valid options. default List characters. Default options.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/check_options_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if options are available in the options list, replace by a default otherwise. — check_options_graph","text":"Options consistent possibilities","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/check_options_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if options are available in the options list, replace by a default otherwise. — check_options_graph","text":"","code":"check_options_graph(c('car','pedestrian'),   c('car','pedestrian','bike','heavy'),c('car','heavy')) #> [1] \"car\"        \"pedestrian\" check_options_graph(c('coucou','salut'),   c('car','pedestrian','bike','heavy'),c('car','heavy')) #> [1] \"car\"   \"heavy\" check_options_graph(NULL,   c('car','pedestrian','bike','heavy'),c('car','heavy')) #> [1] \"car\"   \"heavy\""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/convert_string_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a character string into a numeric vector — convert_string_to_list","title":"Convert a character string into a numeric vector — convert_string_to_list","text":"Convert character string numeric vector","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/convert_string_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a character string into a numeric vector — convert_string_to_list","text":"","code":"convert_string_to_list(vector)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/convert_string_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a character string into a numeric vector — convert_string_to_list","text":"vector Something shape \"10,20,30\"","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/convert_string_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a character string into a numeric vector — convert_string_to_list","text":"Numeric vector. Something shape c(10,20,30)","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/convert_string_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a character string into a numeric vector — convert_string_to_list","text":"","code":"convert_string_to_list(\"10,20,30\") #> [[1]] #> [1] 10 20 30 #>"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/create_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create config file if needed. — create_config","title":"Create config file if needed. — create_config","text":"user needs specify IDs sensors, function create local configuration template file \\inst directory, edit specific information.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/create_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create config file if needed. — create_config","text":"","code":"create_config(overwrite = FALSE)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/create_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create config file if needed. — create_config","text":"overwrite file exist, overwriten?","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/create_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create config file if needed. — create_config","text":"Boolean: TRUE file created, FALSE overwise (config already exists example).","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/create_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create config file if needed. — create_config","text":"","code":"if (FALSE)  #run if you want to create a inst/ directory containing config file   create_config()"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrich traffic data with date informations. — enrich_dates","title":"Enrich traffic data with date informations. — enrich_dates","text":"Enrich traffic data date informations.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrich traffic data with date informations. — enrich_dates","text":"","code":"enrich_dates(data)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrich traffic data with date informations. — enrich_dates","text":"data Data frame containing date character column containing date + hour + timezone.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrich traffic data with date informations. — enrich_dates","text":"dataframe 3 additionnal columns : day, weekday hour.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enrich traffic data with date informations. — enrich_dates","text":"","code":"df <- data.frame('date' = c(\"2022-02-18 08:00:00 CET\",\"2022-02-18 09:00:00 CET\"),   stringsAsFactors = FALSE) enrich_dates(df) #>                      date        day hour weekday #> 1 2022-02-18 08:00:00 CET 2022-02-18    8  friday #> 2 2022-02-18 09:00:00 CET 2022-02-18    9  friday"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrich traffic data with segment name — enrich_name","title":"Enrich traffic data with segment name — enrich_name","text":"segment_fullname also added : combination segment's id name. segment_id configuration file.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrich traffic data with segment name — enrich_name","text":"","code":"enrich_name(data)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrich traffic data with segment name — enrich_name","text":"data Data frame containing segment_id column","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrich traffic data with segment name — enrich_name","text":"dataframe two additionnal columns : segment_name segment_fullname","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enrich traffic data with segment name — enrich_name","text":"","code":"df <- data.frame('segment_id' = c(9000002156, 9000001906)) enrich_name(df) #>    segment_fullname segment_id segment_name #> 1 9000002156 - NULL 9000002156         NULL #> 2 9000001906 - NULL 9000001906         NULL"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_special_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrich traffic data with french vacation and public holidays — enrich_special_days","title":"Enrich traffic data with french vacation and public holidays — enrich_special_days","text":"Enrich traffic data french vacation public holidays","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_special_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrich traffic data with french vacation and public holidays — enrich_special_days","text":"","code":"enrich_special_days(data, vacations = NULL, public_holidays = NULL)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_special_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrich traffic data with french vacation and public holidays — enrich_special_days","text":"data Data frame containing day date(day + hour + timezone) column vacations Data frame containing vacation dates public_holidays Data frame containing public holidays dates","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_special_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrich traffic data with french vacation and public holidays — enrich_special_days","text":"dataframe two additionnal columns : holiday, boolean: TRUE day corresponds public holiday, FALSE otherwise vacation, indicating french vacation, \"vacation\" otherwise.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_special_days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enrich traffic data with french vacation and public holidays — enrich_special_days","text":"","code":"df <- data.frame('day' = as.Date(c(\"2022-02-18\",\"2022-01-01\")),   'date' = c('2022-02-18 12:00:00 CET','2022-01-01 12:00:00 CET')) enrich_special_days(df) #>          day                    date holiday         vacation #> 1 2022-02-18 2022-02-18 12:00:00 CET   FALSE Vacances d'Hiver #> 2 2022-01-01 2022-01-01 12:00:00 CET    TRUE Vacances de Noël"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_traffic.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrich traffic data with date features, names and uptime filters. — enrich_traffic","title":"Enrich traffic data with date features, names and uptime filters. — enrich_traffic","text":"function add day, weekday, hour, segment_name full_name uptime quality boolean. function already used data retrievement process.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_traffic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrich traffic data with date features, names and uptime filters. — enrich_traffic","text":"","code":"enrich_traffic(data)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_traffic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrich traffic data with date features, names and uptime filters. — enrich_traffic","text":"data Raw data frame Telraam API, imported package.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_traffic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrich traffic data with date features, names and uptime filters. — enrich_traffic","text":"dataframe additionnal informations : day, hour, weekday, holiday, vacation, segment_name, uptime_quality","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_traffic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enrich traffic data with date features, names and uptime filters. — enrich_traffic","text":"","code":"enriched_traffic <- enrich_traffic(traffic[0:10,]) setdiff(colnames(enriched_traffic[0:10,]), colnames(traffic[0:10,])) #> character(0)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_uptime.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrich traffic data with uptime quality indication — enrich_uptime","title":"Enrich traffic data with uptime quality indication — enrich_uptime","text":"uptime lower 0.5, uptime_quality FALSE, else TRUE","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_uptime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrich traffic data with uptime quality indication — enrich_uptime","text":"","code":"enrich_uptime(data)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_uptime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrich traffic data with uptime quality indication — enrich_uptime","text":"data Data frame containing uptime column","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_uptime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrich traffic data with uptime quality indication — enrich_uptime","text":"dataframe additionnal column indicating uptime greater (TRUE) lower (FALSE) 0.5.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/enrich_uptime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enrich traffic data with uptime quality indication — enrich_uptime","text":"","code":"df <- data.frame('uptime' = c(0.05, 0.95)) enrich_uptime(df) #>   uptime uptime_quality #> 1   0.05          FALSE #> 2   0.95           TRUE"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/filter_agg.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by selected criteria and aggregating traffics. — filter_agg","title":"Filter by selected criteria and aggregating traffics. — filter_agg","text":"criteria need filled . Unfilled criteria set default filtering performed.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/filter_agg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by selected criteria and aggregating traffics. — filter_agg","text":"","code":"filter_agg(   data,   date_range = NULL,   segments = NULL,   direction = NULL,   modes = NULL,   weekdays = NULL,   hours = NULL,   uptime_quality = TRUE )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/filter_agg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by selected criteria and aggregating traffics. — filter_agg","text":"data Traffic Data Frame date_range Date vector, c(\"aaaa-mm-jj\",\"aaaa-mm-jj\") segments Vector character. Ids desired segments. direction Vector character. Direction street (lft, right, ). modes Vector character. Type(s) mobility: c(\"car\",\"heavy\",\"pedestrian\",\"bike\") weekdays Vector character. Weekday(s) choosen. hours Integer vector. Hours choosen, default day.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/filter_agg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by selected criteria and aggregating traffics. — filter_agg","text":"filtered data, molten mode direction, new columns : mode, mode, one row per different transportation mode + date/hour + direction direction, direction, one row per different transportation mode + date/hour + direction traffic_sum, traffic mode/direction specific date/hour","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/filter_agg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by selected criteria and aggregating traffics. — filter_agg","text":"","code":"date_range = as.Date(c('2022-01-01','2022-01-08')) filter_agg(traffic,   date_range = date_range,   segments = 'RteVitre-06',   direction = 'lft',   modes = 'pedestrian',   weekdays = 'saturday',   hours = 12:14,   uptime_quality = TRUE   ) #> $data #>                  date        day hour  weekday holiday         vacation #> 1 2022-01-01 12:00:00 2022-01-01   12 saturday    TRUE Vacances de Noël #> 2 2022-01-01 13:00:00 2022-01-01   13 saturday    TRUE Vacances de Noël #> 3 2022-01-08 12:00:00 2022-01-08   12 saturday   FALSE      No vacation #> 4 2022-01-08 13:00:00 2022-01-08   13 saturday   FALSE      No vacation #> 5 2022-01-08 14:00:00 2022-01-08   14 saturday   FALSE      No vacation #>   segment_name  v85 #> 1  RteVitre-06  6.5 #> 2  RteVitre-06 40.0 #> 3  RteVitre-06 43.0 #> 4  RteVitre-06 44.5 #> 5  RteVitre-06 44.0 #>                                                                   car_speed_hist_0to70plus #> 1                                                                 100, 0, 0, 0, 0, 0, 0, 0 #> 2        0.000000, 2.222222, 11.111111, 63.333333, 22.222222, 0.000000, 0.000000, 1.111111 #> 3 6.3333333, 3.6666667, 3.6666667, 41.3333333, 38.6666667, 6.0000000, 0.0000000, 0.3333333 #> 4 1.7667845, 3.1802120, 3.5335689, 41.6961131, 45.2296820, 4.2402827, 0.3533569, 0.0000000 #> 5 0.9740260, 0.3246753, 2.9220779, 48.7012987, 40.9090909, 5.8441558, 0.0000000, 0.3246753 #>                                                                                                                                                                                                                                                               car_speed_hist_0to120plus #> 1                                                                                                                                                                                                           0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 2                           0.000000, 0.000000, 0.000000, 2.222222, 3.333333, 7.777778, 22.222222, 41.111111, 16.666667, 5.555556, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.111111, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 #> 3  3.6666667, 2.6666667, 1.6666667, 2.0000000, 1.0000000, 2.6666667, 14.0000000, 27.3333333, 29.0000000, 9.6666667, 5.3333333, 0.6666667, 0.0000000, 0.0000000, 0.3333333, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000 #> 4 1.0600707, 0.7067138, 1.4134276, 1.7667845, 0.7067138, 2.8268551, 13.7809187, 27.9151943, 28.9752650, 16.2544170, 3.5335689, 0.7067138, 0.0000000, 0.3533569, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000 #> 5 0.9740260, 0.0000000, 0.3246753, 0.0000000, 0.9740260, 1.9480519, 14.2857143, 34.4155844, 28.8961039, 12.0129870, 4.8701299, 0.9740260, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3246753, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000 #>      uptime uptime_quality       mode direction traffic_sum #> 1 0.7875000           TRUE pedestrian       lft   16.507937 #> 2 0.7277778           TRUE pedestrian       lft   10.992366 #> 3 0.7808333           TRUE pedestrian       lft    0.000000 #> 4 0.7922222           TRUE pedestrian       lft    1.262272 #> 5 0.7922222           TRUE pedestrian       lft    1.262272 #>  #> $segment #> [1] \"RteVitre-06\" #>  #> $mode #> [1] \"pedestrian\" #>  #> $direction #> [1] \"lft\" #>  #> $weekday #> [1] \"saturday\" #>  #> $hour #> [1] 12 13 14 #>"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_api_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API state — get_api_state","title":"Check API state — get_api_state","text":"Return state 'Telraam' API. Determine updates can made.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_api_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API state — get_api_state","text":"","code":"get_api_state(key = get_telraam_token())"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_api_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API state — get_api_state","text":"key API key (set set_telraam_token function - default -, directly filled).","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_api_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API state — get_api_state","text":"Boolean: TRUE API responds well, FALSE otherwise.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_api_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check API state — get_api_state","text":"","code":"if (FALSE) { my_token <- 'ThisIsNotAValidToken' get_api_state(my_token) }"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_custom_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Colors palettes for each option (mode, direction, segment_name, weekday, hour) — get_custom_palette","title":"Colors palettes for each option (mode, direction, segment_name, weekday, hour) — get_custom_palette","text":"Colors palettes option (mode, direction, segment_name, weekday, hour)","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_custom_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colors palettes for each option (mode, direction, segment_name, weekday, hour) — get_custom_palette","text":"","code":"get_custom_palette(segments)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_custom_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colors palettes for each option (mode, direction, segment_name, weekday, hour) — get_custom_palette","text":"segments Character vectors. Segments name dataframe.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_custom_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colors palettes for each option (mode, direction, segment_name, weekday, hour) — get_custom_palette","text":"list color palettes (named vector) option (mode, direction, segment_name, weekday, hour)","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_custom_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colors palettes for each option (mode, direction, segment_name, weekday, hour) — get_custom_palette","text":"","code":"segments <- c('Route1', 'Route2') get_custom_palette(segments) #> $mode #>        car pedestrian       bike      heavy  #>  \"#F95335\"  \"#FCAF38\"  \"#50A3A4\"  \"#674A40\"  #>  #> $direction #>      both       lft       rgt  #> \"#6d676e\" \"#ff595e\" \"#8ac926\"  #>  #> $segment_name #> <colors> #> #7E1900FF #1A3399FF  #>  #> $weekday #> <colors> #> #009392FF #39B185FF #9CCB86FF #E9E29CFF #EEB479FF #E88471FF #CF597EFF  #>  #> $hour #>           1           2           3           4           5           6  #> \"#FEFBE9FF\" \"#FCF7D5FF\" \"#F5F3C1FF\" \"#EAF0B5FF\" \"#DDECBFFF\" \"#D0E7CAFF\"  #>           7           8           9          10          11          12  #> \"#C2E3D2FF\" \"#B5DDD8FF\" \"#A8D8DCFF\" \"#9BD2E1FF\" \"#8DCBE4FF\" \"#81C4E7FF\"  #>          13          14          15          16          17          18  #> \"#7BBCE7FF\" \"#7EB2E4FF\" \"#88A5DDFF\" \"#9398D2FF\" \"#9B8AC4FF\" \"#9D7DB2FF\"  #>          19          20          21          22          23        <NA>  #> \"#9A709EFF\" \"#906388FF\" \"#805770FF\" \"#684957FF\" \"#46353AFF\"      \"grey\"  #>"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_graph_subtitles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create subtitles for graphics. — get_graph_subtitles","title":"Create subtitles for graphics. — get_graph_subtitles","text":"Create subtitles graphics.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_graph_subtitles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create subtitles for graphics. — get_graph_subtitles","text":"","code":"get_graph_subtitles(   segments = NULL,   modes = NULL,   directions = NULL,   weekdays = NULL,   hours = NULL )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_graph_subtitles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create subtitles for graphics. — get_graph_subtitles","text":"segments Character vector. Selected road segment text, precision NULL (default). modes Character vector. Different modes transportation selected (heavy, car, bike, pedestrian). Default: NULL directions Character vector. Directions traffic (lft, rgt, ) choosen. Default NULL. weekdays Character vector. Weekdays choosen. Default NULL. hours Numeric vector. Hours choosen. Default NULL.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_graph_subtitles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create subtitles for graphics. — get_graph_subtitles","text":"Character, description parameters filled, usable subtitle graphs.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_graph_subtitles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create subtitles for graphics. — get_graph_subtitles","text":"","code":"get_graph_subtitles(segments = c(\"Route1\"),   mode = \"car\", direction = \"lft\", weekdays = \"monday\", hours = 12:14) #> [1] \"Modes: car\\nDirections: lft\\nWeekdays: monday\\nSegments: Route1\\nHours: 12, 13, 14\""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segment_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of a segment giving its id — get_segment_name","title":"Get the name of a segment giving its id — get_segment_name","text":"Get name segment giving id","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segment_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of a segment giving its id — get_segment_name","text":"","code":"get_segment_name(segment_id)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segment_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of a segment giving its id — get_segment_name","text":"segment_id ID segment, present inst/config.yml","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segment_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of a segment giving its id — get_segment_name","text":"Name segment, specified configuration file, NULL otherwise.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segment_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of a segment giving its id — get_segment_name","text":"","code":"if (FALSE)  #run if you want to create a inst/ directory containing config file   create_config()   get_segment_name(9000000000) #> NULL"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Telraam segments into a named vector — get_segments","title":"Get Telraam segments into a named vector — get_segments","text":"Get Telraam segments info yml file transform named vector","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Telraam segments into a named vector — get_segments","text":"","code":"get_segments()"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Telraam segments into a named vector — get_segments","text":"Named vector names segment IDs, NULL configuration file","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_segments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Telraam segments into a named vector — get_segments","text":"","code":"if (FALSE)  #run if you want to create a inst/ directory containing config file   create_config()   get_segments() #> NULL"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_telraam_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the current authentication token for the 'Telraam' API — get_telraam_token","title":"Get the current authentication token for the 'Telraam' API — get_telraam_token","text":"Get current authentication token 'Telraam' API","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_telraam_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the current authentication token for the 'Telraam' API — get_telraam_token","text":"","code":"get_telraam_token()"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_telraam_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the current authentication token for the 'Telraam' API — get_telraam_token","text":"Token currently used, set set_telraam_token()","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/get_telraam_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the current authentication token for the 'Telraam' API — get_telraam_token","text":"","code":"my_token <- \"MyTelraamToken\" set_telraam_token(my_token) get_telraam_token() #> [1] \"MyTelraamToken\""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Availability and quality of sensors during a period through a heatmap. — gg_availability","title":"Availability and quality of sensors during a period through a heatmap. — gg_availability","text":"Higher uptime average, higher quality data. null uptime means sensor available period.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Availability and quality of sensors during a period through a heatmap. — gg_availability","text":"","code":"gg_availability(enriched_data, date_range = NULL)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Availability and quality of sensors during a period through a heatmap. — gg_availability","text":"enriched_data enriched data.frame containing data sensors date_range Date vector. Example: c('2021-01-01','2022-01-01'). Full period NULL.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_availability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Availability and quality of sensors during a period through a heatmap. — gg_availability","text":"Graph showing availability quality sensors selected date range.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_availability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Availability and quality of sensors during a period through a heatmap. — gg_availability","text":"","code":"gg_availability(traffic)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram of car speed over a period, for a segment or a subset of segment. — gg_car_speed_histogram","title":"Histogram of car speed over a period, for a segment or a subset of segment. — gg_car_speed_histogram","text":"Histogram car speed period, segment subset segment.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram of car speed over a period, for a segment or a subset of segment. — gg_car_speed_histogram","text":"","code":"gg_car_speed_histogram(   enriched_data,   date_range = NULL,   segments = NULL,   weekday = NULL,   hours = NULL,   aggregated_by = NULL )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram of car speed over a period, for a segment or a subset of segment. — gg_car_speed_histogram","text":"enriched_data enriched data.frame containing data sensors date_range Date vector. Example: c('2021-01-01','2022-01-01'). Full period NULL (default). segments Character vector. Selected road segment, NULL (default). weekday Character vector. Weekday choosen. Default week. hours Integer vector. Hours choosen, default day. aggregated_by Character. Enables comparison segments weekdays. Options : 'segment_name', 'weekday', NULL (comparison, default).","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram of car speed over a period, for a segment or a subset of segment. — gg_car_speed_histogram","text":"Graph showing histogram car speed period.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram of car speed over a period, for a segment or a subset of segment. — gg_car_speed_histogram","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union subset_traffic <- traffic %>% filter(day < '2022-02-01', hour > 9) gg_car_speed_histogram(subset_traffic)  gg_car_speed_histogram(subset_traffic,   aggregated_by = 'segment_name')  gg_car_speed_histogram(subset_traffic,   weekday = c('monday','sunday'),   segments = 'RteVitre-06',   hours = 17:20,   aggregated_by = \"weekday\")"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_v85.html","id":null,"dir":"Reference","previous_headings":"","what":"Average of v85 car speed per hour over a period, for a segment or a subset of segment. — gg_car_speed_v85","title":"Average of v85 car speed per hour over a period, for a segment or a subset of segment. — gg_car_speed_v85","text":"v85 estimated car speed limit km/h 85% cars respect. 15% drivers drive faster v85 indicator.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_v85.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average of v85 car speed per hour over a period, for a segment or a subset of segment. — gg_car_speed_v85","text":"","code":"gg_car_speed_v85(   enriched_data,   date_range = NULL,   segments = NULL,   weekday = NULL,   hours = NULL,   aggregated_by = NULL )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_v85.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average of v85 car speed per hour over a period, for a segment or a subset of segment. — gg_car_speed_v85","text":"enriched_data enriched data.frame containing data sensors date_range Date vector. Example: c('2021-01-01','2022-01-01'). Full period NULL (default). segments Character vector. Selected road segment, NULL (default). weekday Character vector. Weekday choosen. Default week. hours Integer vector. Hours choosen, default day. aggregated_by Character. Enables comparison segments weekdays. Options : 'segment_name', 'weekday', NULL (comparison, default).","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_v85.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average of v85 car speed per hour over a period, for a segment or a subset of segment. — gg_car_speed_v85","text":"Graph showing average v85 speed per hour.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_car_speed_v85.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average of v85 car speed per hour over a period, for a segment or a subset of segment. — gg_car_speed_v85","text":"","code":"library(dplyr) subset_traffic <- traffic %>% filter(day < '2022-02-01', hour > 9) gg_car_speed_histogram(subset_traffic[0:100,])  gg_car_speed_histogram(subset_traffic, aggregated_by = 'segment_name')  gg_car_speed_histogram(subset_traffic,   weekday = c('monday','sunday'),   segments = 'RteVitre-06',   hours = 17:20,   aggregated_by = \"weekday\")"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"Average of traffic during a week. — gg_traffic_avg","title":"Average of traffic during a week. — gg_traffic_avg","text":"short description... Average traffic week, period segment subset segment, transportation mode , direction .","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average of traffic during a week. — gg_traffic_avg","text":"","code":"gg_traffic_avg(   enriched_data,   date_range = NULL,   segments = NULL,   modes = c(\"heavy\", \"car\"),   direction = \"both\",   weekday = NULL,   aggregated_by = \"weekday\" )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average of traffic during a week. — gg_traffic_avg","text":"enriched_data enriched data.frame containing data sensors date_range Date vector. example: c('2021-01-01','2022-01-01'). Full period NULL (default). segments Character vector. Selected road segment, NULL (default). modes Character vector. Different modes transportation aggregated (heavy, car, bike, pedestrian) . Default: heavy & car direction Character. Direction traffic (lft, rgt, ). Default . weekday Character vector. Weekday choosen. Default week. aggregated_by Character. Options : 'segment_name', 'weekday', 'direction', 'mode'. Default: 'weekday'.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average of traffic during a week. — gg_traffic_avg","text":"Graph showing weekly average evolution traffic (specified parameters) specified period.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_avg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average of traffic during a week. — gg_traffic_avg","text":"","code":"gg_traffic_avg(traffic)  gg_traffic_avg(traffic,   date_range = c('2022-07-01','2022-09-01'),   segment = 'RteVitre-06',   mode = 'car',   direction = 'rgt',   weekday = c('monday','friday')   )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_evolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Evolution of traffic and smoothed traffic. — gg_traffic_evolution","title":"Evolution of traffic and smoothed traffic. — gg_traffic_evolution","text":"Evolution traffic (global, per mode ou per direction), smoothed traffic period.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_evolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evolution of traffic and smoothed traffic. — gg_traffic_evolution","text":"","code":"gg_traffic_evolution(   enriched_data,   date_range = NULL,   segments = NULL,   modes = c(\"heavy\", \"car\"),   direction = \"both\",   smoothed = TRUE,   agg_day = TRUE )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_evolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evolution of traffic and smoothed traffic. — gg_traffic_evolution","text":"enriched_data enriched data.frame containing data sensors date_range Date vector. Example: c('2021-01-01','2022-01-01'). Full period NULL (default). segments Character vector. Selected road segment name, NULL (default). modes Character vector. Different modes transportation aggregated (heavy, car, bike, pedestrian) . Default: heavy & car direction Character. Direction traffic (lft, rgt, ). Default . smoothed Boolean. smoothed traffic plotted ? Default: True agg_day Boolean. data aggregated per day ? Default : True","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_evolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evolution of traffic and smoothed traffic. — gg_traffic_evolution","text":"Graph showing evolution traffic (specified parameters) specified period.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/gg_traffic_evolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evolution of traffic and smoothed traffic. — gg_traffic_evolution","text":"","code":"gg_traffic_evolution(traffic)  gg_traffic_evolution(traffic,   date_range = c('2022-01-01','2022-03-01'),   segment = 'RteVitre-06',   mode = c('car','pedestrian'),   direction = 'lft',   smoothed = FALSE,   agg_day = FALSE)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/import_sensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports data associated with a list of sensors — import_sensor","title":"Imports data associated with a list of sensors — import_sensor","text":"Imports data associated given list sensor names .RData files contained data directory. main purpose function load data saved write update data.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/import_sensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports data associated with a list of sensors — import_sensor","text":"","code":"import_sensor(list_sensor)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/import_sensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports data associated with a list of sensors — import_sensor","text":"list_sensor character vector specifying names sensors import data .","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/import_sensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports data associated with a list of sensors — import_sensor","text":"dataframe containing imported data.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/import_sensor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports data associated with a list of sensors — import_sensor","text":"","code":"if (FALSE) { period <- as.Date(c('2022-01-01', '2022-12-31')) write_update_data('RteVitre-06', period[1], period[2]) write_update_data('ParisArcEnCiel-05', period[1], period[2]) import_sensor(c('RteVitre-06', 'ParisArcEnCiel-05')) }"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/is_vacation.html","id":null,"dir":"Reference","previous_headings":"","what":"Indicates if a date is in vacation period and if true, which vacation. — is_vacation","title":"Indicates if a date is in vacation period and if true, which vacation. — is_vacation","text":"date vacation period, \"vacation\" returned.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/is_vacation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indicates if a date is in vacation period and if true, which vacation. — is_vacation","text":"","code":"is_vacation(date, vacation)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/is_vacation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indicates if a date is in vacation period and if true, which vacation. — is_vacation","text":"date Date (character format) vacation Dataframe vacations, format set_globals_vars output.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/is_vacation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indicates if a date is in vacation period and if true, which vacation. — is_vacation","text":"Vacation description day two dates, \"vacation\" otherwise.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/is_vacation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indicates if a date is in vacation period and if true, which vacation. — is_vacation","text":"","code":"vacation <- data.frame('description' = c('Vacances de Noël'),   start_date = as.POSIXct('2021-12-17 23:00:00'),   end_date = as.POSIXct('2022-01-02 23:00:00')) is_vacation(as.Date('2022-01-01'), vacation) #> [1] \"Vacances de Noël\""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/melt_direction_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Melt dataframe to obtain one row per hour/segment/transportation mode/direction This format makes graphs with ggplot and filtering easier. — melt_direction_mode","title":"Melt dataframe to obtain one row per hour/segment/transportation mode/direction This format makes graphs with ggplot and filtering easier. — melt_direction_mode","text":"Melt dataframe obtain one row per hour/segment/transportation mode/direction format makes graphs ggplot filtering easier.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/melt_direction_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melt dataframe to obtain one row per hour/segment/transportation mode/direction This format makes graphs with ggplot and filtering easier. — melt_direction_mode","text":"","code":"melt_direction_mode(data)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/melt_direction_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melt dataframe to obtain one row per hour/segment/transportation mode/direction This format makes graphs with ggplot and filtering easier. — melt_direction_mode","text":"data Traffic Data Frame","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/melt_direction_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Melt dataframe to obtain one row per hour/segment/transportation mode/direction This format makes graphs with ggplot and filtering easier. — melt_direction_mode","text":"DataFrame one row per hour/segment/transportation mode/direction","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/melt_direction_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Melt dataframe to obtain one row per hour/segment/transportation mode/direction This format makes graphs with ggplot and filtering easier. — melt_direction_mode","text":"","code":"melt_direction_mode(traffic[0:2,]) #>                       date        day hour  weekday holiday         vacation #> 1  2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 2  2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 3  2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 4  2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 5  2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 6  2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 7  2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 8  2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 9  2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 10 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 11 2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 12 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 13 2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 14 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 15 2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 16 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 17 2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 18 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 19 2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 20 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 21 2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 22 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #> 23 2022-01-01 01:00:00 CET 2022-01-01    1 saturday    TRUE Vacances de Noël #> 24 2022-01-01 02:00:00 CET 2022-01-01    2 saturday    TRUE Vacances de Noël #>    segment_name v85 car_speed_hist_0to70plus #> 1   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 2   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 3   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 4   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 5   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 6   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 7   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 8   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 9   RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 10  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 11  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 12  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 13  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 14  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 15  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 16  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 17  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 18  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 19  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 20  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 21  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 22  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 23  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #> 24  RteVitre-06  NA   0, 0, 0, 0, 0, 0, 0, 0 #>                                                    car_speed_hist_0to120plus #> 1  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 2  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 3  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 4  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 5  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 6  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 7  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 8  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 9  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 10 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 11 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 12 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 13 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 14 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 15 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 17 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 18 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 19 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 20 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 21 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 22 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 23 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> 24 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #>    uptime uptime_quality       mode direction traffic_sum #> 1       0          FALSE pedestrian      both           0 #> 2       0          FALSE pedestrian      both           0 #> 3       0          FALSE       bike      both           0 #> 4       0          FALSE       bike      both           0 #> 5       0          FALSE      heavy      both           0 #> 6       0          FALSE      heavy      both           0 #> 7       0          FALSE        car      both           0 #> 8       0          FALSE        car      both           0 #> 9       0          FALSE pedestrian       lft           0 #> 10      0          FALSE pedestrian       lft           0 #> 11      0          FALSE       bike       lft           0 #> 12      0          FALSE       bike       lft           0 #> 13      0          FALSE      heavy       lft           0 #> 14      0          FALSE      heavy       lft           0 #> 15      0          FALSE        car       lft           0 #> 16      0          FALSE        car       lft           0 #> 17      0          FALSE pedestrian       rgt           0 #> 18      0          FALSE pedestrian       rgt           0 #> 19      0          FALSE       bike       rgt           0 #> 20      0          FALSE       bike       rgt           0 #> 21      0          FALSE      heavy       rgt           0 #> 22      0          FALSE      heavy       rgt           0 #> 23      0          FALSE        car       rgt           0 #> 24      0          FALSE        car       rgt           0"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/preprocess_car_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing mandatory for car speed graphs functions — preprocess_car_speed","title":"Preprocessing mandatory for car speed graphs functions — preprocess_car_speed","text":"Preprocessing mandatory car speed graphs functions","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/preprocess_car_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessing mandatory for car speed graphs functions — preprocess_car_speed","text":"","code":"preprocess_car_speed(   enriched_data,   aggregated_by,   date_range,   segments,   weekday,   hours )"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/preprocess_car_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocessing mandatory for car speed graphs functions — preprocess_car_speed","text":"enriched_data enriched data.frame containing data sensors aggregated_by Character. Enables comparison segments weekdays. Options : 'segment_name', 'weekday'. date_range Date vector. Example: c('2021-01-01','2022-01-01'). segments Character vector. Selected road segment. weekday Character vector. Weekday choosen. hours Integer vector. Hours choosen.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/preprocess_car_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocessing mandatory for car speed graphs functions — preprocess_car_speed","text":"list parameters data preprocessed.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/preprocess_car_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocessing mandatory for car speed graphs functions — preprocess_car_speed","text":"","code":"if (FALSE) { preprocess_car_speed(traffic,   date_range = c('2022-01-01','2022-03-01'),   segments = 'RteVitre-06',   weekday = c('monday','sunday'),   hours = 17:20,   aggregated_by = \"weekday\") }"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/retrieve_sensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves data associated with a sensor from the Telraam API — retrieve_sensor","title":"Retrieves data associated with a sensor from the Telraam API — retrieve_sensor","text":"Retrieves data associated sensor Telraam API. data retrieved specified time period start_date end_date (inclusive).","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/retrieve_sensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves data associated with a sensor from the Telraam API — retrieve_sensor","text":"","code":"retrieve_sensor(segment_name, start_date, end_date, key = get_telraam_token())"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/retrieve_sensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves data associated with a sensor from the Telraam API — retrieve_sensor","text":"segment_name Character. Name segment, specified config. start_date Date. Start date \"aaaa-mm-jj\", must date type. end_date Date. End date \"aaaa-mm-jj\", must date type. key API key (set set_telraam_token() function)","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/retrieve_sensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves data associated with a sensor from the Telraam API — retrieve_sensor","text":"Dataframe Telraam API, enriched enrich_traffic() function.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/retrieve_sensor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves data associated with a sensor from the Telraam API — retrieve_sensor","text":"","code":"if (FALSE) { period <- as.Date(c('2022-01-01', '2022-12-31')) retrieve_sensor('RteVitre-06', period[1], period[2]) }"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/seq_by_3_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sequence of intervals with three-month periods — seq_by_3_month","title":"Generate sequence of intervals with three-month periods — seq_by_3_month","text":"function used internally retrieve_sensor function generate sequence intervals three-month periods. takes start date (start_date) end date (end_date), returns data frame two columns representing start end dates interval.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/seq_by_3_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sequence of intervals with three-month periods — seq_by_3_month","text":"","code":"seq_by_3_month(start_date, end_date)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/seq_by_3_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sequence of intervals with three-month periods — seq_by_3_month","text":"start_date Date. Start date \"yyyy-mm-dd\" format. end_date Date. End date \"yyyy-mm-dd\" format.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/seq_by_3_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sequence of intervals with three-month periods — seq_by_3_month","text":"Dataframe start end columns, row represents 3 months period.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/seq_by_3_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate sequence of intervals with three-month periods — seq_by_3_month","text":"","code":"seq_by_3_month(as.Date('2023-11-01'),as.Date('2024-11-01')) #>        start        end #> 1 2023-11-01 2024-02-01 #> 2 2024-02-01 2024-05-01 #> 3 2024-05-01 2024-08-01 #> 4 2024-08-01 2024-11-01"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_global_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to set up the global variables for public holidays and vacations, with the default being the french dates from a governmental API. — set_global_vars","title":"Function to set up the global variables for public holidays and vacations, with the default being the french dates from a governmental API. — set_global_vars","text":"Function set global variables public holidays vacations, default french dates governmental API.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_global_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to set up the global variables for public holidays and vacations, with the default being the french dates from a governmental API. — set_global_vars","text":"","code":"set_global_vars(vacations = NULL, public_holidays = NULL)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_global_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to set up the global variables for public holidays and vacations, with the default being the french dates from a governmental API. — set_global_vars","text":"vacations data frame containing vacation dates public_holidays data frame containing public holidays dates","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_global_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to set up the global variables for public holidays and vacations, with the default being the french dates from a governmental API. — set_global_vars","text":"return anything, set global variables public holidays vacations.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_global_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to set up the global variables for public holidays and vacations, with the default being the french dates from a governmental API. — set_global_vars","text":"","code":"pkg.globals <- new.env(parent = emptyenv()) set_global_vars() print(pkg.globals$vacations) #> NULL"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_telraam_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves an authentication token for the 'Telraam' API. — set_telraam_token","title":"Saves an authentication token for the 'Telraam' API. — set_telraam_token","text":"want get token instruction, please use get_telraam_token().","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_telraam_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves an authentication token for the 'Telraam' API. — set_telraam_token","text":"","code":"set_telraam_token(token)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_telraam_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves an authentication token for the 'Telraam' API. — set_telraam_token","text":"token string token","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_telraam_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves an authentication token for the 'Telraam' API. — set_telraam_token","text":"Boolean: TRUE token correctly set","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/set_telraam_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves an authentication token for the 'Telraam' API. — set_telraam_token","text":"","code":"my_token <- \"MyTelraamToken\" set_telraam_token(my_token) get_telraam_token() #> [1] \"MyTelraamToken\""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/traffic.html","id":null,"dir":"Reference","previous_headings":"","what":"Traffic data of Telraam sensors in Châteaubourg (FR) — traffic","title":"Traffic data of Telraam sensors in Châteaubourg (FR) — traffic","text":"Telraam sensors continously monitor street form citizen window. count heavy vehicules, cars, twok-wheelers pedestrians, every hour. Châteaubourg one city France highest density sensors dataframe subset sensors data Châteaubourg 2022. Additional properties present natively Telraam API added package.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/traffic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traffic data of Telraam sensors in Châteaubourg (FR) — traffic","text":"","code":"traffic"},{"path":[]},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/traffic.html","id":"traffic","dir":"Reference","previous_headings":"","what":"traffic","title":"Traffic data of Telraam sensors in Châteaubourg (FR) — traffic","text":"data frame 16,729 rows 22 columns: instance_id Sensor number. Equals -1 API request made road segment camera. segment_id Road segment Telraam ID. Equals -1 API request made camera road segment. segment_name Additional property - Segment name specified configuration file. segment_fullname Additional property - Concatenation segment_id segment name specified configuration. date date UTC time reporting interval (beginning interval). day Additional property - Day reporting interval. hour Additional property - Hour reporting interval. weekday Additional property - Weekday reporting interval. holiday Additional property - boolean, indicates whether entry French public holiday. vacation Indicates whether entry French vacation period, true, vacation period name. interval can \"hourly\" \"daily\" hourly daily aggregate data. uptime 0 1, represents portion reporting interval actively spent counting traffic uptime_quality Additional property - boolean, indicates whether entry uptime greather equal 0. heavy, heavy_lft, heavy_rgt number heavy vehicles, total directions. car, car_lft, car_rgt number cars, total directions. bike, bike_lft, bike_rgt number two-wheelers, total directions. pedestrian, pedestrian_lft, pedestrian_rgt number pedestrians, total directions. direction 1, internal consistency value Telraam. car_speed_hist_0to70plus, car_speed_hist_0to120plus estimated car speed distribution 10 km/h bins 0 70+ km/h 120+ km/h (percentage total 100%). timezone name Time zone segment can found. v85 estimated car speed limit km/h 85% cars respect","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/traffic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Traffic data of Telraam sensors in Châteaubourg (FR) — traffic","text":"https://telraam-api.net/","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/write_update_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write or update the sensor data in the data folder — write_update_data","title":"Write or update the sensor data in the data folder — write_update_data","text":"Writes updates sensor data data folder. retrieves data specified sensor start_date end_date (inclusive) using retrieve_sensor function, converts certain columns character strings writing data RData file data folder.","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/write_update_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write or update the sensor data in the data folder — write_update_data","text":"","code":"write_update_data(segment_name, start_date, end_date)"},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/write_update_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write or update the sensor data in the data folder — write_update_data","text":"segment_name Character. Name segment, specified config. start_date Date. Start date \"aaaa-mm-jj\" end_date Date. End date \"aaaa-mm-jj\"","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/write_update_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write or update the sensor data in the data folder — write_update_data","text":"Boolean: TRUE data well saved/written, FALSE otherwise (data example)","code":""},{"path":"https://ketsiaguichard.github.io/telraamStats/reference/write_update_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write or update the sensor data in the data folder — write_update_data","text":"","code":"if (FALSE) { period <- as.Date(c('2022-01-01', '2022-12-31')) write_update_data('RteVitre-06', period[1], period[2]) }"},{"path":"https://ketsiaguichard.github.io/telraamStats/news/index.html","id":"telraamstats-110","dir":"Changelog","previous_headings":"","what":"telraamStats 1.1.0","title":"telraamStats 1.1.0","text":"Initial CRAN submission.","code":""}]
